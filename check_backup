#!/usr/bin/env bash


LIST_FILE="/opt/backup_files"
DATE=$(date +%Y-%m-%d)

if [ ! -f ${LIST_FILE} ];then
    touch ${LIST_FILE} 
    echo "File ${LIST_FILE} created." 
fi

string_replace() {
    echo "${1/\*/$2}"
}

get_file_size(){
    local file=${1}
    local unit=${2}
    local size_of_file=""
    if [ ! -z ${file}  ];then
        if [ "${unit}" = "MB" ];then
            size_of_file=$(du -m ${file} | awk '{print $1}')
            echo ${size_of_file}
        elif [ "${unit}" = "GB" ];then
            size_of_file=$(du -m ${file} | awk '{print $1}')
            echo ${size_of_file}
        else
            exit 1
        fi
    else
        exit 1
    fi

}


# read file that contain backup files and parameters
while read -r line; do
    # read line by line, comments line will be ignored/ starting with # (^#)
    [[ "$line" =~ ^#.*$ ]] && continue
    # put all columns to variables
    name=$(echo $line | awk '{print $1}' )
    path_to_file=$(echo "$line" | awk '{print $2}')
    if [[ "$path_to_file" =~ *DAY* ]]; then
        
    type_of_file=$(echo $line | awk '{print $3}')
    minimal_size=$(echo $line | awk '{print $4}')

    # if minimal size of backup file is in GBs
    if [[ "${minimal_size}" =~ GB$ ]]; then
        # get actual using get_file_size function  
        actual_size=$(get_file_size ${path_to_file} "GB" )
        # minimal_size without unit 
        minimal_size=$(echo $line | awk '{print $4}' | sed 's/GB//g')

        echo "###------------------------------------------------------------------------------------###"
        # if actual size is greater than or equal to minimal_size that is set in LIST_FILE
        if [ "${actual_size}" -gt "${minimal_size}"   ] || [ "${actual_size}" -eq "${minimal_size}" ]; then
            echo "Backup :  ${name} is OK ; File : ${path_to_file} ; Type : ${type_of_file} ; Size :   ${actual_size}GB"
            return 0
        elif [ "${actual_size}" -lt "${minimal_size}" ]; then
            echo "Backup : ${name} is NOT OK ; File : ${path_to_file} ; Type : ${type_of_file} ; Size :  ${actual_size}GB"
            return 1
        fi
    # if minimal size of backup file is in MBs
    elif [[ "${minimal_size}" =~ MB$ ]]; then
        actual_size=$(get_file_size ${path_to_file} "MB" )
        minimal_size=$(echo $line | awk '{print $4}' | sed 's/MB//g')
        echo "###------------------------------------------------------------------------------------###"
        if [ "${actual_size}" -gt "${minimal_size}"   ] || [ "${actual_size}" -eq "${minimal_size}" ]; then
            echo "Backup :  ${name} is OK ; File : ${path_to_file} ; Type : ${type_of_file} ; Size :   ${actual_size}GB"
        elif [ "${actual_size}" -lt "${minimal_size}" ]; then
            echo "Backup : ${name} is NOT OK ; File : ${path_to_file} ; Type : ${type_of_file} ; Size :  ${actual_size}GB"
            
        fi
    fi

done < "${LIST_FILE}"

